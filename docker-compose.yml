services:
  gh-runner:
    # Use pre-built image from GitHub Container Registry
    image: ghcr.io/depoll/gh-runner-docker:latest
    # Or build locally (comment out image above and uncomment build below)
    # build: .
    environment:
      # Required: GitHub repository or organization URL
      GITHUB_URL: ${GITHUB_URL}
      # Required: GitHub personal access token or registration token
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      # Optional: Runner name prefix (default: "runner")
      RUNNER_NAME_PREFIX: ${RUNNER_NAME_PREFIX:-runner}
      # Optional: Runner working directory (default: "_work")
      RUNNER_WORKDIR: ${RUNNER_WORKDIR:-_work}
      # Optional: Comma-separated list of labels
      RUNNER_LABELS: ${RUNNER_LABELS:-}
      # Optional: Runner group (default: "default")
      RUNNER_GROUP: ${RUNNER_GROUP:-default}
      # Optional: Deployment ID for grouping runners
      DEPLOYMENT_ID: ${DEPLOYMENT_ID:-}
    deploy:
      replicas: ${REPLICAS:-3}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    restart: unless-stopped
    # Enable privileged mode for Docker-in-Docker
    privileged: true
    # Remove any persistent storage to ensure stateless runners
    tmpfs:
      - /tmp
    # Optional: Resource limits
    # mem_limit: 2g
    # cpus: '1.0'
    labels:
      # Enable Watchtower auto-updates
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containrrr/watchtower:latest
    environment:
      # Check for updates every hour
      WATCHTOWER_POLL_INTERVAL: 3600
      # Only update containers with the watchtower.enable label
      WATCHTOWER_LABEL_ENABLE: true
      # Clean up old images after updating
      WATCHTOWER_CLEANUP: true
      # Include stopped containers in updates
      WATCHTOWER_INCLUDE_STOPPED: true
      # Rolling restart for swarm services
      WATCHTOWER_ROLLING_RESTART: true
      # Add notifications (optional - uncomment and configure for Slack/email)
      # WATCHTOWER_NOTIFICATION_URL: ${WATCHTOWER_NOTIFICATION_URL:-}
    volumes:
      # Watchtower needs access to Docker socket to manage containers
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped